<div class="volunteering-main-container">
   

    <div class="vol-application-form-container">
    <h2 class="content-header">Volunteer Application Form</h2>
        <form class="volunteer-form" id="volunteerForm">
            <h3>Volunteer Options:</h3>
            <div class="volunteer-group">
                <div class="volunteer-inner-group">
                    
                    <div>
                        
                        <input type="checkbox" id="donationDogProgram" name="volunteerOptions" value="Donation Dog Program">
                        <label for="donationDogProgram">Guide Dog Trainer Assistant</label><br>
                    </div>
                    <div>
                        
                        <input type="checkbox" id="eventsFundraising" name="volunteerOptions" value="Events & Fundraising Assistant">
                    <label for="eventsFundraising">Community Outreach Coordinator</label><br>
                </div>
            </div>
            <div class="volunteer-inner-group">

                <div>
                    
                    <input type="checkbox" id="giftWrapping" name="volunteerOptions" value="Gift Wrapping">
                    <label for="giftWrapping">Administrative Support Volunteer</label><br>
                </div>
                <div>
                    
                    <input type="checkbox" id="clientDrivers" name="volunteerOptions" value="Client Drivers">
                    <label for="clientDrivers">Fundraising Event Organizer</label><br>
                </div>
            </div>
        </div>
            <h3>Personal Information:</h3>
            <div class="volunteer-group">
                <div class="volunteer-inner-group">

                    <div>
                        
                        <label for="firstName">First Name:</label>
                        <input type="text" id="firstName" name="firstName" required><br>
                    </div>
                    <div>
                        
                        <label for="lastName">Last Name:</label>
                        <input type="text" id="lastName" name="lastName" required><br>
                    </div>
                    <div>
                        
                        <label for="age">Age (Optional):</label>
                        <input type="number" id="age" name="age"><br>
                    </div>
                
                </div>
                <div class="volunteer-inner-group">
                    
                    <div>
                        
                        <label for="address">Address:</label>
                        <input type="text" id="address" name="address" required><br>
                    </div>
                    <div>
                        <label for="city">City:</label>
                        <input type="text" id="city" name="city" required>
                    </div>
            
                    <div>
                        <label for="province">Province:</label>
                        <input type="text" id="province" name="province" required>
                    </div>
            
                    <div>
                        <label for="postalCode">Postal Code:</label>
                        <input type="text" id="postalCode" name="postalCode" required>
                    </div>
            
                </div>
                <div class="volunteer-inner-group">
                    <div>
                        
                        <label for="phoneNumber">Phone Number:</label>
                        <input type="tel" id="phoneNumber" name="phoneNumber" required><br>
                    </div>
                    <div>
                        
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required><br>
                    </div>
                    <div>
                        
                        <label for="occupation">Occupation:</label>
                        <input type="text" id="occupation" name="occupation" required><br>
                    </div>
                </div>
                <div class="volunteer-inner-group">
                    
                    <div>
                        
                        <label for="isHighSchoolStudent">Are you a high school student seeking volunteer hours?</label>
                        <input type="checkbox" id="isHighSchoolStudent" name="isHighSchoolStudent" value="Yes"><br>
                    </div>

                    <div>
                        
                        <label for="school">School:</label>
                        <input type="text" id="school" name="school" required><br>
                    </div>
                    
                </div>
                
            </div> 
            
            <h3>Availability:</h3>
            <div class="volunteer-group">
                <div class="volunteer-inner-group">
                    <div >
                        
                        <input type="checkbox" id="weekdays" name="availability" value="Weekdays">
                        <label for="weekdays">Weekdays</label><br>
                    </div>
                    <div>
                        
                        <input type="checkbox" id="weekends" name="availability" value="Weekends">
                        <label for="weekends">Weekends</label><br>
                    </div>
                </div>
                <div class="volunteer-inner-group">

                    <div>
                        
                        <input type="checkbox" id="evenings" name="availability" value="Evenings">
                        <label for="evenings">Evenings</label><br>
                    </div>
                    <div>
                        <input type="checkbox" id="flexible" name="availability" value="Flexible">
                        <label for="flexible">Flexible</label><br>
                        
                    </div>
                </div>
            </div>
                
            <button type="submit" id="submitFormBtn" class="btn btn-primary volunteer-btn">Submit Application</button>
        </form>
        <div id="successModal">
            <div>
              
                <p id="volunteer-submit-message"></p>
            </div>
        </div>
</div>
<script>

    const volunteerForm = document.getElementById('volunteerForm');
    const successModal = document.getElementById('successModal');
    successModal.style.display = 'none';
    const errorElement = document.getElementById('volunteer-submit-message')

    document.getElementById('submitFormBtn').addEventListener('click', function (event) {
        var form = document.getElementById('volunteerForm');
        
    
        
        var elements = form.elements;
    
        for (var i = 0; i < elements.length; i++) {
            if (elements[i].hasAttribute('required') && elements[i].value.trim() === '') {
                elements[i].style.borderColor = 'red';
                insertErrorMessage(elements[i].parentNode, 'This field is required');
            } else {
                elements[i].style.borderColor = '';
                removeErrorMessages(elements[i].parentNode);
            }
        }
    
        
        if (form.querySelector('.error')) {
            event.preventDefault();
        }
    });
    
    function insertErrorMessage(parentNode, message) {
        var errorMessage = parentNode.querySelector('.error');
        if (!errorMessage) {
            errorMessage = document.createElement('span');
            errorMessage.className = 'error';
            errorMessage.style.fontSize = "13px"
            parentNode.appendChild(errorMessage);
        }
        errorMessage.textContent = message;
    }
    
    function removeErrorMessages(parentNode) {
        if (parentNode) {
            var errorMessages = parentNode.querySelectorAll('.error');
            for (var i = 0; i < errorMessages.length; i++) {
                parentNode.removeChild(errorMessages[i]);
            }
    
            // clear the border color
            parentNode.querySelector('input, select').style.borderColor = '';
        }
    }


    var inputFields = document.querySelectorAll('input[type="text"], input[type="number"],input[type="tel"],input[type="email"]',);
    inputFields.forEach(input => {
        input.addEventListener('input', () => {
            var parentNode = input.parentNode;
            removeErrorMessages(parentNode);
        });
    });
    


    volunteerForm.addEventListener('submit', function(event) {
        event.preventDefault();

        const isEmailValid = checkEmail();
        const isMobileNumberValid = checkMobileNumber();

        if (!isEmailValid || !isMobileNumberValid) {
            return;
        }
        const formDataObject = {};

        const formData = new URLSearchParams(new FormData(volunteerForm));

        for (const [key, value] of formData.entries()) {
            formDataObject[key] = value;

        }
        
        fetch('/volunteer/submit-volunteer-form', {
            method: 'POST',
            body: JSON.stringify(formDataObject),
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (response.ok) {
                successModal.style.display = 'block';
                
                errorElement.textContent = "Volunteer Application Submitted Succesfully.";

                setTimeout(function() {
                    successModal.style.display = 'none';
                }, 4000);
                volunteerForm.reset();
            } else {

                successModal.style.display = 'block';
                
                errorElement.textContent = "Error submitting form, Please try again later.";
                setTimeout(function() {
                    successModal.style.display = 'none';

                }, 4000);

                console.error('Error submitting form:', response.status, response.statusText);
                
            }
        })
        .catch(error => {
            console.error('Error submitting form:', error);
        });
    });
    const mobileNumberInput = document.getElementById('phoneNumber');


    const emailInput = document.getElementById('email');

    function isValidEmail(email) {
        const allowedProviders = ['gmail.com', 'hotmail.com'];
        const allowedExtensions = ['.net', '.dev', '.com', '.in'];

        if (!email || email.indexOf('@') < 1) {
            return false;
        }

        const [username, domain] = email.split('@');
        const [, extension] = domain.split('.');

        const isProviderValid = allowedProviders.includes(domain);
        const isExtensionValid = allowedExtensions.includes(`.${extension}`);

        return isProviderValid && isExtensionValid;
    }


    function checkEmail() {
        const emailValue = emailInput.value.trim();
        const isEmailValid = isValidEmail(emailValue);
        const emailElement = document.getElementById('email');
        
        var parentNode = emailElement.parentElement;
     
        if (emailValue === '') {
            emailElement.style.borderColor = '#ccc';
            removeErrorMessages(parentNode);
        } else if (isEmailValid) {
            emailElement.style.borderColor = 'green';
            removeErrorMessages(parentNode);
        } else {
            emailElement.style.borderColor = 'red';
            insertErrorMessage(parentNode, 'Invalid Email Address');
        }

        return isEmailValid;
    }

  
    function isValidMobileNumber(mobileNumber) {
        const mobileRegex = /^\d{10}$/;
        return mobileRegex.test(mobileNumber);
    }

    
    function checkMobileNumber() {
        const mobileNumberValue = mobileNumberInput.value.trim();
        const isMobileNumberValid = isValidMobileNumber(mobileNumberValue);
        const mobileNumberElement = document.getElementById('phoneNumber');
        var parentNode = mobileNumberElement.parentElement;
        if (mobileNumberValue === '') {
            mobileNumberElement.style.borderColor = '#ccc';
            removeErrorMessages(parentNode);
        } else if (isMobileNumberValid) {
            mobileNumberElement.style.borderColor = 'green';
            removeErrorMessages(parentNode);
        } else {
            mobileNumberElement.style.borderColor = 'red';
            insertErrorMessage(parentNode, 'Invalid Phone Number');
            
        }

        return isMobileNumberValid;
    }
    
    emailInput.addEventListener('input', checkEmail);
    mobileNumberInput.addEventListener('input', checkMobileNumber);
</script>